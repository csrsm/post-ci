(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{523:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1884518406,3782778982&fm=26&gp=0.jpg",alt:"img"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1607450905867&di=6d5ceb067597312ed726cbaf6d72e5aa&imgtype=0&src=http%3A%2F%2Fimages.linoxide.com%2Fdocker-commands-cheatsheet-part2-700x900.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[s._v("#")]),s._v(" 安装Docker")]),s._v(" "),a("hr"),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、卸载老版本")]),s._v("\n yum remove "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、更新yum-utils")]),s._v("\n yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3、设置镜像仓库--使用阿里云镜像")]),s._v("\nyum-config-manager "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --add-repo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4、更新yum")]),s._v("\n yum makecache fast\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5、安装docker   docker-ce  ce是社区版  ee是企业版 推荐使用ce版本")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 6、启动docker")]),s._v("\nsystemctl start "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 7、使用命令docker version查看docker是否安装成功")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" version\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 8、测试hello-word镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run hello-world\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 9、配置阿里云镜像加速")]),s._v("\ncentos配置：\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n  "registry-mirrors": ["https://2vd8an7e.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])])]),a("h3",{attrs:{id:"docker常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[s._v("#")]),s._v(" Docker常用命令")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("帮助命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看docker版本信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" version\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" info\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" --help 万能命令\n")])])]),a("p",[s._v("官网api：https://docs.docker.com/engine/reference/commandline")]),s._v(" "),a("h3",{attrs:{id:"镜像命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像命令"}},[s._v("#")]),s._v(" 镜像命令")]),s._v(" "),a("p",[a("strong",[s._v("docker images")]),s._v("  # 查看所有镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("可选参数\n-a 列出所有镜像 \n-q 只显示镜像id\n")])])]),a("p",[a("strong",[s._v("docker search")]),s._v("   #镜像搜索")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("可选参数\n--filter 条件过来\n例如 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" search mysql --filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("stars"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" 搜索stars3000以上的\n")])])]),a("p",[a("strong",[s._v("docker pull")]),s._v("  #下载镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull 镜像\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull 镜像:tag\n")])])]),a("p",[s._v("**docker rmi  -f **#删除镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images -aq"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" 删除全部容器\n")])])]),a("p",[a("strong",[s._v("设置镜像标签")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" tag 860c279d2fec runoob/centos:dev\n")])])]),a("p",[a("strong",[s._v("创建镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build dockerfile  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过dockerfile 生产一个镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将容器转化成镜像，类似快照")]),s._v("\n")])])]),a("p",[a("strong",[s._v("查看镜像够建过程")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" 镜像id     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看镜像够建过程")]),s._v("\n")])])]),a("p",[a("strong",[s._v("启动所有容器")])]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker start $(docker ps -a | awk '{ print $1}' | tail -n +2)\n")])])]),a("p",[a("strong",[s._v("关闭所有容器")])]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker stop $(docker ps -a | awk '{ print $1}' | tail -n +2)\n")])])]),a("p",[a("strong",[s._v("删除所有容器")])]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker rm $(docker ps -a | awk '{ print $1}' | tail -n +2)\n")])])]),a("p",[a("strong",[s._v("删除所有镜像（慎用）")])]),s._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker rmi $(docker images | awk '{print $3}' |tail -n +2)\n")])])]),a("h3",{attrs:{id:"容器命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器命令"}},[s._v("#")]),s._v(" 容器命令")]),s._v(" "),a("p",[s._v("有了镜像才可以创建镜像。")]),s._v(" "),a("p",[a("strong",[s._v("创建容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("可选参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" imagesName/imagesId\n可选项\n--name name       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#给容器起名字")]),s._v("\n-d                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#后台启动方式 前提是必须有一个前台进程，否则容器就停止了 ")]),s._v("\n-it               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用交互方式启动 后面跟/bin/bash")]),s._v("\n-P                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#随机指定端口映射")]),s._v("\n-p                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定容器端口 -p 8080(主机端口):8080(容器端口)")]),s._v("\n-v                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#容器卷，用来容器内和主机间文件同步用")]),s._v("\n-c                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#传入要执行的命令 -c "while true; do echo hello world; sleep 1; done"')]),s._v("\n--net             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定网络")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" create  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器 但不启动")]),s._v("\n")])])]),a("p",[a("strong",[s._v("退出容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#容器停止并退出到主机")]),s._v("\nCtrl + p + q      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不终止容器退出容器")]),s._v("\n")])])]),a("p",[a("strong",[s._v("查看容器")])]),s._v(" "),a("div",{staticClass:"language-xhell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker ps          # 列处正在运行的容器\n\ndocker ps -a       # 列出历史运行的容器\n\ndocker ps -n=1     # 显示最近一条创建的容器\n\ndocker ps -q       # 只显示容器编号\n")])])]),a("p",[a("strong",[s._v("docker rm -f")]),s._v("        #强制删除容器")]),s._v(" "),a("p",[a("strong",[s._v("容器启动和停止")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重启容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#停止容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#暴力停止容器")]),s._v("\n")])])]),a("p",[a("strong",[s._v("进入容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" attach 容器id              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#退出后会停止容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器id /bin/bash  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#退出后容器不会停止")]),s._v("\n")])])]),a("p",[a("strong",[s._v("导出和导入容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" 容器id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 名字.tar    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导出容器到tar包")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" docker/ubuntu.tar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" - test/ubuntu:v1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将快照文件 ubuntu.tar 导入到镜像 test/ubuntu:v1")]),s._v("\n")])])]),a("p",[a("strong",[s._v("日志")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs -ft bf08b7f2cd89      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#像tail 一样查看所有日志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs -ft --tail "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" bf08b7f2cd89      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#像tail 一样查看10条日志")]),s._v("\n")])])]),a("p",[a("strong",[s._v("查看容器中的进程信息")])]),s._v(" "),a("div",{staticClass:"language-xhell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker top 容器id       #查看容器中的进程信息\n")])])]),a("p",[a("strong",[s._v("查看镜像元数据")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect 容器id   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看容器详细信息")]),s._v("\n")])])]),a("p",[a("strong",[s._v("从容器内拷贝文件到主机上")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" 容器id:容器内路径 目的主机路径   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#拷贝容器内文件到主机")]),s._v("\n")])])]),a("p",[a("strong",[s._v("从主机拷贝到容器内 使用卷挂载")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("-v 容器卷技术 实现容器和主机间文件互相同步\n")])])]),a("h3",{attrs:{id:"容器卷相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器卷相关"}},[s._v("#")]),s._v(" 容器卷相关")]),s._v(" "),a("blockquote",[a("p",[s._v("容器卷用于实现容器和主机间数据同步，也可以为容器数据做持久化")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("方式一： 直接使用命令 -v\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it -v 主机目录:容器内目录 容器\n")])])]),a("h4",{attrs:{id:"具名和匿名挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具名和匿名挂载"}},[s._v("#")]),s._v(" 具名和匿名挂载")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匿名挂载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it -v 容器内目录      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不写主机路径  就是匿名挂载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it -v 名字：容器内目录 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定名字就是具名挂载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  查看卷信息\n可选参数\n "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看所有volume")]),s._v("\n inspect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("volume_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看某一个volume的挂载信息")]),s._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("方式二： 通过dockerfile初始化时候直接挂载好\n")])])]),a("h4",{attrs:{id:"dockerfile相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile相关"}},[s._v("#")]),s._v(" Dockerfile相关")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编写Dockerfile")]),s._v("\n\nFROM centos\n\nMAINTAINER echooo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("echoooo_@outlook.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nVOLUME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volume1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#可以具名也可以匿名")]),s._v("\n\nCMD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----end-----"')]),s._v("\nCMD /bin/bash\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 够建images")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -f ./Dockerfile -t echooo/centos:1.0 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("h4",{attrs:{id:"dockfile相关指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockfile相关指令"}},[s._v("#")]),s._v(" Dockfile相关指令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("FROM        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定制的镜像都是基于 FROM 的镜像")]),s._v("\nMAINTAINER  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定作者")]),s._v("\nCMD         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#是容器启动时执行的命令")]),s._v("\nENTRYPOINT  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动时的默认命令，")]),s._v("\nRUN         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#构件容器时就运行的命令以及提交运行结果")]),s._v("\nLABEL       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为镜像指定标签")]),s._v("\nEXPOSE      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#暴漏容器运行时的监听端口给外部，如果想使得容器与主机的端口有映射关系，必须在容器启动的时候加上 -P参数")]),s._v("\nENV         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置环境变量")]),s._v("\nARG         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#构建参数，与 ENV 作用一至。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效")]),s._v("\nADD         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#把文件复制到镜像中，src可以是远程")]),s._v("\nCOPY        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#把文件复制到镜像中，与add的区别是 src只能是本地文件")]),s._v("\nVOLUME      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#实现挂载功能")]),s._v("\nWORKDIR     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置工作目录")]),s._v("\nHEALTHCHECK "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于指定某个程序或者指令来监控 docker 容器服务的运行状态")]),s._v("\nONBUILD     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#用于延迟构建命令的执行")]),s._v("\n")])])]),a("h4",{attrs:{id:"数据卷容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据卷容器"}},[s._v("#")]),s._v(" 数据卷容器")]),s._v(" "),a("blockquote",[a("p",[s._v("多个容器之间做数据同步，而且可以互相同步")]),s._v(" "),a("p",[s._v("如：容器A从父容器B同步数据，使用--volumes-from")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先启动父容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -itd --name contain01 容器id\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动子容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -itd --name contain02 --volumes-from contain01 容器id\n当父容器修改数据后即可自动同步到子容器，反之也可\n")])])]),a("h3",{attrs:{id:"实战-创建自己的centos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战-创建自己的centos"}},[s._v("#")]),s._v(" 实战-创建自己的centos")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编写自己的centos Dockerfile")]),s._v("\nFROM centos\n\nMAINTAINER echooo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("echoooo_@outlook.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nENV MYPATH /usr/local\nWORKDIR "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MYPATH")]),s._v("\n\nVOLUME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volume1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volume2:/home"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nRUN yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\nRUN yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" net-tools\n\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n\nCMD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"----------MYPAHT='),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MYPATH")]),s._v('"')]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----build finish-----"')]),s._v("\n\nCMD /bin/bash\n")])])]),a("h3",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[s._v("#")]),s._v(" 网络")]),s._v(" "),a("blockquote",[a("p",[s._v("容器之间互联是怎么实现？")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看docker网络情况")]),s._v("\n")])])]),a("h4",{attrs:{id:"容器互联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器互联"}},[s._v("#")]),s._v(" 容器互联")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先容器1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -itd --name contain01 容器id /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器2 --link到容器1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -itd --name contain02 --link contain01 容器id /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现在进入到容器2后，即可通过name ping通")]),s._v("\n")])])]),a("h4",{attrs:{id:"自定义网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义网络"}},[s._v("#")]),s._v(" 自定义网络")]),s._v(" "),a("blockquote",[a("p",[s._v("使用自定义网络，可以不用--link手动建立，默认即可ping 通")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建自定义网络")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#例子")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create --driver bridge --subnet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.0/16 --gateway "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1 mynet\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看网络详细信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network inspect mynet\n")])])]),a("h3",{attrs:{id:"实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[s._v("#")]),s._v(" 实战")]),s._v(" "),a("h4",{attrs:{id:"部署tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署tomcat"}},[s._v("#")]),s._v(" 部署tomcat")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 tomcat\n")])])]),a("h4",{attrs:{id:"部署redis集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署redis集群"}},[s._v("#")]),s._v(" 部署redis集群")]),s._v(" "),a("blockquote",[a("p",[s._v("分片模式")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编写脚本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("port")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /mydata/redis/node-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("/conf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" /mydata/redis/node-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("/conf/redis.conf\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("//mydata/redis/node-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("/conf/redis.conf")]),s._v("\nport 6379\nbind 0.0.0.0\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 5000\ncluster-announce-ip 192.168.0.1"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("\ncluster-announce-port 6379\ncluster-announce-bus-port 16379\nappendonly yes\nEOF")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动redis")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("port")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("637")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v(":6379 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1637")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v(":16379 --name redis-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /mydata/redis/node-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("/data:/data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /mydata/redis/node-"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("/conf/redis.conf:/etc/redis/redis.conf "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-d --net redis --ip "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v(" redis:5.0.9-alpine3.11 redis-server /etc/redis/redis.conf\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建集群")]),s._v("\nredis-cli --cluster create "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.11:6379 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.12:6379 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.13:6379 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.14:6379 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.15:6379 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.16:6379 --cluster-replicas "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("h4",{attrs:{id:"部署自己的springboot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署自己的springboot"}},[s._v("#")]),s._v(" 部署自己的springboot")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编写dockerfile")]),s._v("\nFROM java:8\n\nMAINTAINER echooo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("echoooo_@outlook.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nCOPY *.jar /snowball.jar\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--server.port=8080"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n\nENTRYPOINT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/snowball.jar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build 然后run")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -itd -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 584e346787a6\n")])])]),a("h3",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),a("h4",{attrs:{id:"docker-compose-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-安装"}},[s._v("#")]),s._v(" "),a("strong",[s._v("docker compose")]),s._v(" 安装")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、安装，使用国内镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://get.daocloud.io/docker/compose/releases/download/1.27.4/docker-compose-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/local/bin/docker-compose\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、修改权限")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3、验证")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" --version\n")])])]),a("h4",{attrs:{id:"体验-官网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#体验-官网"}},[s._v("#")]),s._v(" 体验(官网)")]),s._v(" "),a("blockquote",[a("p",[s._v("https://docs.docker.com/compose/gettingstarted/")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1、创建目录")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" composetest\n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" composetest\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2、创建app.py")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" redis\nfrom flask "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" Flask\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Flask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__name__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncache "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis.Redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'redis'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ndef get_hit_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    retries "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" True:\n        try:\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" cache.incr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hits'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        except redis.exceptions.ConnectionError as exc:\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" retries "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":\n                raise exc\n            retries -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n            time.sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n@app.route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndef hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" get_hit_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World! I have been seen {} times.\\n'")]),s._v(".format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3、编写requirements.txt")]),s._v("\nflask\nredis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4、编写Dockerfile")]),s._v("\nFROM python:3.7-alpine\nWORKDIR /code\nENV "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLASK_APP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("app.py\nENV "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLASK_RUN_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\nRUN apk "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --no-cache gcc musl-dev linux-headers\nCOPY requirements.txt requirements.txt\nRUN pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flask"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5、编写docker-compose.yml")]),s._v("\nversion: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.9"')]),s._v("\nservices:\n  web:\n    build: "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n    ports:\n      - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5000:5000"')]),s._v("\n  redis:\n    image: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis:alpine"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 6、启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 7、访问")]),s._v("\nlocalhost:5000\n")])])]),a("h4",{attrs:{id:"开发自己的springboot服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发自己的springboot服务"}},[s._v("#")]),s._v(" 开发自己的springboot服务")]),s._v(" "),a("p",[s._v("1、开发springboot服务")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RestController")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" testController "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringRedisTemplate")]),s._v(" stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("testRedis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" view "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"view"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"welcome,views : "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("p",[s._v("2、编写Dockerfile")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("FROM java:8\n\nCOPY *.jar /app.jar\n\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--server.port=8080"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n\nENTRYPOINT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app.jar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[s._v("3、编写docker-compose.yml")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("version: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.9"')]),s._v("\nservices:\n  snowballredis:\n    build: "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n    image: snowball\n    depends_on:\n      - redis\n    ports:\n      - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8080:8080"')]),s._v("\n  redis:\n    image: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis:alpine"')]),s._v("\n\n")])])]),a("p",[s._v("4、启动")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);