(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{524:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-yaml详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-yaml详解"}},[t._v("#")]),t._v(" Kubernetes YAML详解")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yaml格式的pod定义文件完整内容：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，版本号，例如v1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，元数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod名称")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod所属的命名空间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义标签")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义标签名字")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自定义注释列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器的详细定义")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，Pod中容器列表")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必选，容器的镜像名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Always "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" IfNotPresent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取镜像的策略 Alawys表示下载镜像 IfnotPresent表示优先使用本地镜像，否则下载镜像，Nerver表示仅使用本地镜像")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令列表，如不指定，使用打包时使用的启动命令")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的启动命令参数列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workingDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器的工作目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#挂载到容器内部的存储卷配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#存储卷在容器内mount的绝对路径，应少于512字符")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" boolean    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否为只读模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要暴露的端口库号列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口号名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器需要监听的端口号")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" int    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器所在主机需要监听的端口号，默认与Container相同")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口协议，支持TCP和UDP，默认TCP")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器运行前需设置的环境变量列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境变量的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制和请求的设置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源限制的设置")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#资源请求的设置")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Cpu请求，容器启动的初始可用数量")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#内存清楚，容器启动的初始可用数量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查的设置，当探测无响应几次后将自动重启该容器，检查方法有exec、httpGet和tcpSocket，对一个容器只需设置其中一种方法即可")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod容器内检查方式设置为exec方式")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exec方式需要制定的命令或脚本")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("HttpHeaders")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对Pod内个容器健康检查方式设置为tcpSocket方式")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器启动完成后首次探测的时间，单位为秒")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("successThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         privileged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Always "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" OnFailure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod的重启策略，Always表示一旦不管以何种方式终止运行，kubelet都将重启，OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obeject  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置NodeSelector表示将该Pod调度到包含这个label的node上，以key：value的格式指定")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pull镜像时使用的secret名称，以key：secretkey格式指定")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n    hostNetwork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在该pod上定义共享存储卷列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#共享存储卷名称 （volumes类型有很多种）")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Pod所在宿主机的目录，将被用于同期中mount的目录")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为secret的存储卷，挂载集群与定义的secre对象到容器内部")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scretname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string  \n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);