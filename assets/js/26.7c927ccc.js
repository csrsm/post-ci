(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{530:function(t,v,_){"use strict";_.r(v);var s=_(5),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"http响应状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http响应状态"}},[t._v("#")]),t._v(" http响应状态：")]),t._v(" "),_("ul",[_("li",[t._v("200：请求成功，正常处理")]),t._v(" "),_("li",[t._v("204：请求成功，无资源返回")]),t._v(" "),_("li",[t._v("206：范围请求")]),t._v(" "),_("li",[t._v("301：资源的URI更新，永久性更新")]),t._v(" "),_("li",[t._v("302：资源的URI临时定位到其他位置")]),t._v(" "),_("li",[t._v("303：请求的资源URI存着另一个资源，应使用get方法定向获取")]),t._v(" "),_("li",[t._v("304：发送附带条件的请求时，服务端允许请求，但是条件未满足")]),t._v(" "),_("li",[t._v("307：临时重定向")]),t._v(" "),_("li",[t._v("400：请求语法错误")]),t._v(" "),_("li",[t._v("401：认证失败")]),t._v(" "),_("li",[t._v("403：访问权限问题，拒绝访问")]),t._v(" "),_("li",[t._v("404：找不到请求资源")]),t._v(" "),_("li",[t._v("500：内部资源出错，后台程序出错")]),t._v(" "),_("li",[t._v("503：服务器暂时处于超负载或正在进行停机维护，无法处理请求")]),t._v(" "),_("li")]),t._v(" "),_("p",[t._v("使用代理服务器的理由有：利用缓存技术（稍后讲解）减少网络带宽\n的流量，组织内部针对特定网站的访问控制，以获取访问日志为主要\n目的，等等。")]),t._v(" "),_("p",[t._v("利用网关能提高通信的安全性")]),t._v(" "),_("p",[t._v("通过隧道的传输，可以和远距离的服务器安全通信。")]),t._v(" "),_("h2",{attrs:{id:"http缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http缺点"}},[t._v("#")]),t._v(" http缺点：")]),t._v(" "),_("p",[t._v("1.通信使用明文（不加密），内容可能会被窃听\n2.不验证通信方的身份，因此有可能遭遇伪装\n3.无法证明报文的完整性，所以有可能已遭篡改")]),t._v(" "),_("p",[t._v("HTTP+ 加密 + 认证 + 完整性保护\n=HTTPS")]),t._v(" "),_("h2",{attrs:{id:"https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https:")]),t._v(" "),_("ol",[_("li",[t._v("并非是一种新协议，只是 HTTP 通信接口部分用SSL（Secure Socket Layer）\n和 TLS（Transport Layer Security）协议代替而已。")]),t._v(" "),_("li",[t._v("HTTPS 采用共享密钥加密和公开密钥加密两者并用的混合加密\n机制,在交换密钥环节使用公开密钥加密方式，之后的建立通信交\n换报文阶段则使用共享密钥加密方式。")]),t._v(" "),_("li",[t._v("证书：验证建立的公开秘钥就是原本预想的服务器发行的公开秘钥，避免秘钥\n在建立之前被攻击者替换掉，数字证书认证机构为双方都信任的第三方机构。\n证书流程：向证书机构申请公开秘钥--\x3e绑定证书数字签名到公开秘钥--\x3e\n将绑定数字签名的公开秘钥发送到服务端--\x3e服务端发送公开秘钥到客户端，客户端验证数字签名")])]),t._v(" "),_("h3",{attrs:{id:"https缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https缺点"}},[t._v("#")]),t._v(" HTTPS缺点")]),t._v(" "),_("ol",[_("li",[t._v("使用SSL进行通信 导致通信速度变慢")]),t._v(" "),_("li",[t._v("SSL加密处理会大量消耗硬件资源")]),t._v(" "),_("li",[t._v("购买证书需要开销")])]),t._v(" "),_("p",[t._v("必要的敏感信息需要使用HTTPS")]),t._v(" "),_("h2",{attrs:{id:"http-1-1使用的认证方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1使用的认证方式"}},[t._v("#")]),t._v(" http/1.1使用的认证方式：")]),t._v(" "),_("p",[t._v("1.BASIC认证（基本认证）：将用户名密码经过base64处理后发送验证请求，不够灵活，且不安全。（请求时，先询问后在将信息发送请求）\n2.DIGEST 认证（摘要认证）：发送摘要以及由质询码计算出的响应码，不够灵活，安全性更高但不能防止用户伪装。\n3.SSL 客户端认证：证书认证，获取证书内客户端公开秘钥后，进行加密通信。\n多数情况采用双因素加密：证书+表单用户名密码，证书认证客户端计算机，用户名密码确定本人操作。\n4.FormBase 认证（基于表单认证）：用户名密码验证，认证多半基于表单认证。")]),t._v(" "),_("p",[t._v("使用cookie管理Session：服务器端验证用户信息后，将向客户端发送包含SessionID的cookie。\n保存用户信息的一种安全方式：密码加盐后使用hash函数计算出散列值保存")]),t._v(" "),_("h2",{attrs:{id:"http瓶颈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http瓶颈"}},[t._v("#")]),t._v(" http瓶颈：")]),t._v(" "),_("p",[t._v("1.一条连接上只可发送一个请求。\n2.请求只能从客户端开始。客户端不可以接收除响应以外的指令。\n3.请求 / 响应首部未经压缩就发送。首部信息越多延迟越大。\n4.发送冗长的首部。每次互相发送相同的首部造成的浪费较多。\n5.可任意选择数据压缩格式。非强制压缩发送。")]),t._v(" "),_("h3",{attrs:{id:"解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案:")]),t._v(" "),_("p",[_("strong",[_("strong",[t._v("未解决 HTTP 协议本身存在的问题")])]),t._v("\n1.Ajax:利用js和Dom,局部Web页面替换加载,响应传输的数据会减少。实时获取服务器内容时，可能导致大量请求产生。\n2.Comet：服务器端有内容更新，会直接响应到客户端，实时更新，持续连接通信会消耗更多资源。")]),t._v(" "),_("p",[t._v("SPDY:消除http协议级瓶颈，介于http与tcp之间。\n相较http，额外功能：\n1.多路复用流：单一的tcp连接，处理多个http请求。\n2.赋予请求优先级：分配多个请求优先级。\n3.压缩http首部：减少通信产生的数据量。\n4.支持服务器主动向客户端请求。\n5.服务器主动提示功能，避免没必要的请求。\n缺点：\n因为 SPDY 基本上只是将单个域名（ IP 地址）的通信多路复用，所\n以当一个 Web 网站上使用多个域名下的资源，改善效果就会受到限\n制。")]),t._v(" "),_("h2",{attrs:{id:"websocket"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket：")]),t._v(" "),_("p",[t._v("​\t\tWeb 浏览器与 Web 服务器之间全双工通信标准，主要是为了解决 Ajax 和 Comet里 XMLHttpRequest 附带的缺陷所引起的问题")]),t._v(" "),_("h3",{attrs:{id:"主要特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主要特点"}},[t._v("#")]),t._v(" 主要特点：")]),t._v(" "),_("ol",[_("li",[t._v("推送功能：支持由服务器向客户端推送数据的推送功能。")]),t._v(" "),_("li",[t._v("减少通信量：只要建立起 WebSocket 连接，就希望一直保持连接状态。每次连接的总开销小，首部信息也小，通信量相应少。")])]),t._v(" "),_("p",[_("strong",[t._v("通信过程")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("一次握手 http请求：握手·请求 -> 握手·响应")]),t._v(" "),_("li",[t._v("切换websocket协议进行通信")])]),t._v(" "),_("p",[_("strong",[t._v("WebDAV")]),t._v("：")]),t._v(" "),_("p",[t._v("Web 服务器管理文件，基于http1.1的 PUT 方法和 DELETE 方法，就可以对 Web 服务器上的文件进行创建和删除操作")]),t._v(" "),_("p",[_("strong",[t._v("http受众广泛原因")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("防火墙权限")]),t._v(" "),_("li",[t._v("http浏览器客户端普及等")])])])}),[],!1,null,null,null);v.default=a.exports}}]);