(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{552:function(t,e,r){"use strict";r.r(e);var a=r(5),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("指标监控")]),t._v(" "),r("h1",{attrs:{id:"springboot2核心技术-指标监控"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot2核心技术-指标监控"}},[t._v("#")]),t._v(" SpringBoot2核心技术-指标监控")]),t._v(" "),r("h1",{attrs:{id:"指标监控"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指标监控"}},[t._v("#")]),t._v(" 指标监控")]),t._v(" "),r("h1",{attrs:{id:"_1、springboot-actuator"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、springboot-actuator"}},[t._v("#")]),t._v(" 1、SpringBoot Actuator")]),t._v(" "),r("h2",{attrs:{id:"_1、简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、简介"}},[t._v("#")]),t._v(" 1、简介")]),t._v(" "),r("p",[t._v("未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n")])])]),r("p",[r("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1354552/1606886483335-697ee1c1-2f69-43ab-bddc-3a038382319c.png",alt:"image.png"}})]),t._v(" "),r("h2",{attrs:{id:"_2、1-x与2-x的不同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、1-x与2-x的不同"}},[t._v("#")]),t._v(" 2、1.x与2.x的不同")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1354552/1606884394162-ac7f2d8e-7abb-44df-9998-fb0f2705f238.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_YXRndWlndS5jb20g5bCa56GF6LC3%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"image.png"}})]),t._v(" "),r("h2",{attrs:{id:"_3、如何使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、如何使用"}},[t._v("#")]),t._v(" 3、如何使用")]),t._v(" "),r("ul",[r("li",[t._v("引入场景")]),t._v(" "),r("li",[t._v("访问 "),r("a",{attrs:{href:"http://localhost:8080/actuator/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/"),r("OutboundLink")],1),t._v("**")]),t._v(" "),r("li",[t._v("暴露所有监控信息为HTTP")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("management:\n  endpoints:\n    enabled-by-default: true #暴露所有端点信息\n    web:\n      exposure:\n        include: '*'  #以web方式暴露\n")])])]),r("ul",[r("li",[t._v("测试")])]),t._v(" "),r("p",[r("a",{attrs:{href:"http://localhost:8080/actuator/beans",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/beans"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"http://localhost:8080/actuator/configprops",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/configprops"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"http://localhost:8080/actuator/metrics",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/metrics"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"http://localhost:8080/actuator/metrics/jvm.gc.pause",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/metrics/jvm.gc.pause"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"http://localhost:8080/actuator/metrics",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/"),r("OutboundLink")],1),t._v("endpointName/detailPath\n。。。。。。")]),t._v(" "),r("h2",{attrs:{id:"_4、可视化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4、可视化"}},[t._v("#")]),t._v(" 4、可视化")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/codecentric/spring-boot-admin",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/codecentric/spring-boot-admin"),r("OutboundLink")],1)]),t._v(" "),r("h1",{attrs:{id:"_2、actuator-endpoint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、actuator-endpoint"}},[t._v("#")]),t._v(" 2、Actuator Endpoint")]),t._v(" "),r("h2",{attrs:{id:"_1、最常使用的端点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、最常使用的端点"}},[t._v("#")]),t._v(" 1、最常使用的端点")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("ID")]),t._v(" "),r("th",[t._v("描述")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("auditevents")])]),t._v(" "),r("td",[t._v("暴露当前应用程序的审核事件信息。需要一个"),r("code",[t._v("AuditEventRepository组件")]),t._v("。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("beans")])]),t._v(" "),r("td",[t._v("显示应用程序中所有Spring Bean的完整列表。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("caches")])]),t._v(" "),r("td",[t._v("暴露可用的缓存。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("conditions")])]),t._v(" "),r("td",[t._v("显示自动配置的所有条件信息，包括匹配或不匹配的原因。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("configprops")])]),t._v(" "),r("td",[t._v("显示所有"),r("code",[t._v("@ConfigurationProperties")]),t._v("。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("env")])]),t._v(" "),r("td",[t._v("暴露Spring的属性"),r("code",[t._v("ConfigurableEnvironment")])])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("flyway")])]),t._v(" "),r("td",[t._v("显示已应用的所有Flyway数据库迁移。 需要一个或多个"),r("code",[t._v("Flyway")]),t._v("组件。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("health")])]),t._v(" "),r("td",[t._v("显示应用程序运行状况信息。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("httptrace")])]),t._v(" "),r("td",[t._v("显示HTTP跟踪信息（默认情况下，最近100个HTTP请求-响应）。需要一个"),r("code",[t._v("HttpTraceRepository")]),t._v("组件。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("info")])]),t._v(" "),r("td",[t._v("显示应用程序信息。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("integrationgraph")])]),t._v(" "),r("td",[t._v("显示Spring "),r("code",[t._v("integrationgraph")]),t._v(" 。需要依赖"),r("code",[t._v("spring-integration-core")]),t._v("。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("loggers")])]),t._v(" "),r("td",[t._v("显示和修改应用程序中日志的配置。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("liquibase")])]),t._v(" "),r("td",[t._v("显示已应用的所有Liquibase数据库迁移。需要一个或多个"),r("code",[t._v("Liquibase")]),t._v("组件。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("metrics")])]),t._v(" "),r("td",[t._v("显示当前应用程序的“指标”信息。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("mappings")])]),t._v(" "),r("td",[t._v("显示所有"),r("code",[t._v("@RequestMapping")]),t._v("路径列表。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("scheduledtasks")])]),t._v(" "),r("td",[t._v("显示应用程序中的计划任务。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("sessions")])]),t._v(" "),r("td",[t._v("允许从Spring Session支持的会话存储中检索和删除用户会话。需要使用Spring Session的基于Servlet的Web应用程序。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("shutdown")])]),t._v(" "),r("td",[t._v("使应用程序正常关闭。默认禁用。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("startup")])]),t._v(" "),r("td",[t._v("显示由"),r("code",[t._v("ApplicationStartup")]),t._v("收集的启动步骤数据。需要使用"),r("code",[t._v("SpringApplication")]),t._v("进行配置"),r("code",[t._v("BufferingApplicationStartup")]),t._v("。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("threaddump")])]),t._v(" "),r("td",[t._v("执行线程转储。")])])])]),t._v(" "),r("p",[t._v("如果您的应用程序是Web应用程序（Spring MVC，Spring WebFlux或Jersey），则可以使用以下附加端点：")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("ID")]),t._v(" "),r("th",[t._v("描述")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("heapdump")])]),t._v(" "),r("td",[t._v("返回"),r("code",[t._v("hprof")]),t._v("堆转储文件。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("jolokia")])]),t._v(" "),r("td",[t._v("通过HTTP暴露JMX bean（需要引入Jolokia，不适用于WebFlux）。需要引入依赖"),r("code",[t._v("jolokia-core")]),t._v("。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("logfile")])]),t._v(" "),r("td",[t._v("返回日志文件的内容（如果已设置"),r("code",[t._v("logging.file.name")]),t._v("或"),r("code",[t._v("logging.file.path")]),t._v("属性）。支持使用HTTP"),r("code",[t._v("Range")]),t._v("标头来检索部分日志文件的内容。")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("prometheus")])]),t._v(" "),r("td",[t._v("以Prometheus服务器可以抓取的格式公开指标。需要依赖"),r("code",[t._v("micrometer-registry-prometheus")]),t._v("。")])])])]),t._v(" "),r("p",[t._v("最常用的Endpoint")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Health：监控状况")])]),t._v(" "),r("li",[r("strong",[t._v("Metrics：运行时指标")])]),t._v(" "),r("li",[r("strong",[t._v("Loggers：日志记录")])])]),t._v(" "),r("h2",{attrs:{id:"_2、health-endpoint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、health-endpoint"}},[t._v("#")]),t._v(" 2、Health Endpoint")]),t._v(" "),r("p",[t._v("健康检查端点，我们一般用于在云平台，平台会定时的检查应用的健康状况，我们就需要Health Endpoint可以为平台返回当前应用的一系列组件健康状况的集合。")]),t._v(" "),r("p",[t._v("重要的几点：")]),t._v(" "),r("ul",[r("li",[t._v("health endpoint返回的结果，应该是一系列健康检查后的一个汇总报告")]),t._v(" "),r("li",[t._v("很多的健康检查默认已经自动配置好了，比如：数据库、redis等")]),t._v(" "),r("li",[t._v("可以很容易的添加自定义的健康检查机制")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1354552/1606908975702-4f9a3208-15ca-4a78-9f76-939ef986db7e.png",alt:"image.png"}})]),t._v(" "),r("h2",{attrs:{id:"_3、metrics-endpoint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、metrics-endpoint"}},[t._v("#")]),t._v(" 3、Metrics Endpoint")]),t._v(" "),r("p",[t._v("提供详细的、层级的、空间指标信息，这些信息可以被pull（主动推送）或者push（被动获取）方式得到；")]),t._v(" "),r("ul",[r("li",[t._v("通过Metrics对接多种监控系统")]),t._v(" "),r("li",[t._v("简化核心Metrics开发")]),t._v(" "),r("li",[t._v("添加自定义Metrics或者扩展已有Metrics")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1354552/1606909073222-c6e77ca3-4b1c-4f38-a1c6-8614dec4f7bc.png",alt:"image.png"}})]),t._v(" "),r("h2",{attrs:{id:"_4、管理endpoints"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4、管理endpoints"}},[t._v("#")]),t._v(" 4、管理Endpoints")]),t._v(" "),r("h3",{attrs:{id:"_1、开启与禁用endpoints"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、开启与禁用endpoints"}},[t._v("#")]),t._v(" 1、开启与禁用Endpoints")]),t._v(" "),r("ul",[r("li",[t._v("默认所有的Endpoint除过shutdown都是开启的。")]),t._v(" "),r("li",[t._v("需要开启或者禁用某个Endpoint。配置模式为  "),r("strong",[t._v("management.endpoint."),r("strong",[r("strong",[r("endpointName")],1)]),t._v(".enabled = true")])])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("management:\n  endpoint:\n    beans:\n      enabled: true\n")])])]),r("ul",[r("li",[t._v("或者禁用所有的Endpoint然后手动开启指定的Endpoint")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("management:\n  endpoints:\n    enabled-by-default: false\n  endpoint:\n    beans:\n      enabled: true\n    health:\n      enabled: true\n")])])]),r("h3",{attrs:{id:"_2、暴露endpoints"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、暴露endpoints"}},[t._v("#")]),t._v(" 2、暴露Endpoints")]),t._v(" "),r("p",[t._v("支持的暴露方式")]),t._v(" "),r("ul",[r("li",[t._v("HTTP：默认只暴露"),r("strong",[t._v("health")]),t._v("和"),r("strong",[t._v("info")]),t._v(" Endpoint")]),t._v(" "),r("li",[r("strong",[t._v("JMX")]),t._v("：默认暴露所有Endpoint")]),t._v(" "),r("li",[t._v("除过health和info，剩下的Endpoint都应该进行保护访问。如果引入SpringSecurity，则会默认配置安全访问规则")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("ID")]),t._v(" "),r("th",[t._v("JMX")]),t._v(" "),r("th",[t._v("Web")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("auditevents")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("beans")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("caches")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("conditions")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("configprops")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("env")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("flyway")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("health")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("Yes")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("heapdump")])]),t._v(" "),r("td",[t._v("N/A")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("httptrace")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("info")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("Yes")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("integrationgraph")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("jolokia")])]),t._v(" "),r("td",[t._v("N/A")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("logfile")])]),t._v(" "),r("td",[t._v("N/A")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("loggers")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("liquibase")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("metrics")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("mappings")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("prometheus")])]),t._v(" "),r("td",[t._v("N/A")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("scheduledtasks")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("sessions")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("shutdown")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("startup")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("threaddump")])]),t._v(" "),r("td",[t._v("Yes")]),t._v(" "),r("td",[t._v("No")])])])]),t._v(" "),r("h1",{attrs:{id:"_3、定制-endpoint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、定制-endpoint"}},[t._v("#")]),t._v(" 3、定制 Endpoint")]),t._v(" "),r("h2",{attrs:{id:"_1、定制-health-信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、定制-health-信息"}},[t._v("#")]),t._v(" 1、定制 Health 信息")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('import org.springframework.boot.actuate.health.Health;\nimport org.springframework.boot.actuate.health.HealthIndicator;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class MyHealthIndicator implements HealthIndicator {\n\n    @Override\n    public Health health() {\n        int errorCode = check(); // perform some specific health check\n        if (errorCode != 0) {\n            return Health.down().withDetail("Error Code", errorCode).build();\n        }\n        return Health.up().build();\n    }\n\n}\n\n构建Health\nHealth build = Health.down()\n                .withDetail("msg", "error service")\n                .withDetail("code", "500")\n                .withException(new RuntimeException())\n                .build();\n')])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("management:\n    health:\n      enabled: true\n      show-details: always #总是显示详细信息。可显示每个模块的状态信息\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('@Component\npublic class MyComHealthIndicator extends AbstractHealthIndicator {\n\n    /**\n     * 真实的检查方法\n     * @param builder\n     * @throws Exception\n     */\n    @Override\n    protected void doHealthCheck(Health.Builder builder) throws Exception {\n        //mongodb。  获取连接进行测试\n        Map<String,Object> map = new HashMap<>();\n        // 检查完成\n        if(1 == 2){\n//            builder.up(); //健康\n            builder.status(Status.UP);\n            map.put("count",1);\n            map.put("ms",100);\n        }else {\n//            builder.down();\n            builder.status(Status.OUT_OF_SERVICE);\n            map.put("err","连接超时");\n            map.put("ms",3000);\n        }\n\n\n        builder.withDetail("code",100)\n                .withDetails(map);\n\n    }\n}\n')])])]),r("h3",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),r("h2",{attrs:{id:"_2、定制info信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、定制info信息"}},[t._v("#")]),t._v(" 2、定制info信息")]),t._v(" "),r("p",[t._v("常用两种方式")]),t._v(" "),r("h4",{attrs:{id:"_1、编写配置文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、编写配置文件"}},[t._v("#")]),t._v(" 1、编写配置文件")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("info:\n  appName: boot-admin\n  version: 2.0.1\n  mavenProjectName: @project.artifactId@  #使用@@可以获取maven的pom文件值\n  mavenProjectVersion: @project.version@\n")])])]),r("h4",{attrs:{id:"_2、编写infocontributor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、编写infocontributor"}},[t._v("#")]),t._v(" 2、编写InfoContributor")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('import java.util.Collections;\n\nimport org.springframework.boot.actuate.info.Info;\nimport org.springframework.boot.actuate.info.InfoContributor;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ExampleInfoContributor implements InfoContributor {\n\n    @Override\n    public void contribute(Info.Builder builder) {\n        builder.withDetail("example",\n                Collections.singletonMap("key", "value"));\n    }\n\n}\n')])])]),r("p",[r("a",{attrs:{href:"http://localhost:8080/actuator/info",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/actuator/info"),r("OutboundLink")],1),t._v(" 会输出以上方式返回的所有info信息")]),t._v(" "),r("h2",{attrs:{id:"_3、定制metrics信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、定制metrics信息"}},[t._v("#")]),t._v(" 3、定制Metrics信息")]),t._v(" "),r("h4",{attrs:{id:"_1、springboot支持自动适配的metrics"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、springboot支持自动适配的metrics"}},[t._v("#")]),t._v(" 1、SpringBoot支持自动适配的Metrics")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("JVM metrics, report utilization of:")])]),t._v(" "),r("li",[r("ul",[r("li",[t._v("Various memory and buffer pools")]),t._v(" "),r("li",[t._v("Statistics related to garbage collection")]),t._v(" "),r("li",[t._v("Threads utilization")]),t._v(" "),r("li",[t._v("Number of classes loaded/unloaded")])])]),t._v(" "),r("li",[r("p",[t._v("CPU metrics")])]),t._v(" "),r("li",[r("p",[t._v("File descriptor metrics")])]),t._v(" "),r("li",[r("p",[t._v("Kafka consumer and producer metrics")])]),t._v(" "),r("li",[r("p",[t._v("Log4j2 metrics: record the number of events logged to Log4j2 at each level")])]),t._v(" "),r("li",[r("p",[t._v("Logback metrics: record the number of events logged to Logback at each level")])]),t._v(" "),r("li",[r("p",[t._v("Uptime metrics: report a gauge for uptime and a fixed gauge representing the application’s absolute start time")])]),t._v(" "),r("li",[r("p",[t._v("Tomcat metrics ("),r("code",[t._v("server.tomcat.mbeanregistry.enabled")]),t._v(" must be set to "),r("code",[t._v("true")]),t._v(" for all Tomcat metrics to be registered)")])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://docs.spring.io/spring-integration/docs/5.4.1/reference/html/system-management.html#micrometer-integration",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Integration"),r("OutboundLink")],1),t._v(" metrics")])])]),t._v(" "),r("h4",{attrs:{id:"_2、增加定制metrics"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、增加定制metrics"}},[t._v("#")]),t._v(" 2、增加定制Metrics")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('class MyService{\n    Counter counter;\n    public MyService(MeterRegistry meterRegistry){\n         counter = meterRegistry.counter("myservice.method.running.counter");\n    }\n\n    public void hello() {\n        counter.increment();\n    }\n}\n\n\n//也可以使用下面的方式\n@Bean\nMeterBinder queueSize(Queue queue) {\n    return (registry) -> Gauge.builder("queueSize", queue::size).register(registry);\n}\n')])])]),r("h2",{attrs:{id:"_4、定制endpoint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4、定制endpoint"}},[t._v("#")]),t._v(" 4、定制Endpoint")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('@Component\n@Endpoint(id = "container")\npublic class DockerEndpoint {\n\n\n    @ReadOperation\n    public Map getDockerInfo(){\n        return Collections.singletonMap("info","docker started...");\n    }\n\n    @WriteOperation\n    private void restartDocker(){\n        System.out.println("docker restarted....");\n    }\n\n}\n')])])]),r("p",[t._v("场景：开发"),r("strong",[t._v("ReadinessEndpoint")]),t._v("来管理程序是否就绪，或者"),r("strong",[t._v("Liveness****Endpoint")]),t._v("来管理程序是否存活；")]),t._v(" "),r("p",[t._v("当然，这个也可以直接使用 "),r("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-kubernetes-probes",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-kubernetes-probes"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);