(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{560:function(t,s,a){"use strict";a.r(s);var r=a(5),_=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql事务隔离级别问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql事务隔离级别问题"}},[t._v("#")]),t._v(" MySQL事务隔离级别问题")]),t._v(" "),a("h2",{attrs:{id:"_1-问题描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-问题描述"}},[t._v("#")]),t._v(" 1. 问题描述")]),t._v(" "),a("p",[t._v("​\t在使用全局编码生成器时，使用频率多的情况下，总会出现获取编码失败的情况。")]),t._v(" "),a("h2",{attrs:{id:"_2-问题原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-问题原因"}},[t._v("#")]),t._v(" 2. 问题原因")]),t._v(" "),a("p",[t._v("​\tMySQL默认事务隔离级别时"),a("strong",[t._v("REPEATABLE READ")]),t._v("，即在一个事务内，如果你对同一数据进行多次读取，你会得到相同的结果，即使其他事务在这期间对数据进行了修改并提交。当出现并发时，获取编码的方法读取当前规则最大编码时会出现可重复读现象，当其中一个update事务提交，其他的查询语句在当前事务内查询的最大编码还是没修改之前的编码，执行update会校验，进而导致获取编码失败。")]),t._v(" "),a("h2",{attrs:{id:"_3-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本概念"}},[t._v("#")]),t._v(" 3. 基本概念")]),t._v(" "),a("p",[t._v("MySQL 不同版本下的默认存储引擎和事务隔离级别可能会有所不同。以下是 MySQL 一些主要版本的默认设置概述：")]),t._v(" "),a("h3",{attrs:{id:"存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[t._v("#")]),t._v(" 存储引擎")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("MySQL 5.1 及之前")]),t._v("：默认存储引擎是 MyISAM。")]),t._v(" "),a("li",[a("strong",[t._v("MySQL 5.5 及之后")]),t._v("：默认存储引擎变更为 InnoDB。InnoDB 支持事务、行级锁定和外键约束，适合大多数生产环境。")])]),t._v(" "),a("h3",{attrs:{id:"事务隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别"}},[t._v("#")]),t._v(" 事务隔离级别")]),t._v(" "),a("p",[t._v("MySQL 的事务隔离级别可以通过 "),a("code",[t._v("SET TRANSACTION ISOLATION LEVEL")]),t._v(" 命令来设定，支持以下四种标准的隔离级别：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("READ UNCOMMITTED")]),t._v("：允许脏读，即一个事务可以读取另一个未提交事务的数据更改。")]),t._v(" "),a("li",[a("strong",[t._v("READ COMMITTED")]),t._v("：只允许读取已经提交的数据，防止脏读。")]),t._v(" "),a("li",[a("strong",[t._v("REPEATABLE READ")]),t._v("：在同一个事务中多次读取相同数据时，保证结果一致。这是 MySQL InnoDB 引擎的默认隔离级别。")]),t._v(" "),a("li",[a("strong",[t._v("SERIALIZABLE")]),t._v("：最高的隔离级别，完全串行化处理，强制事务排序执行，避免了幻读。")])]),t._v(" "),a("h4",{attrs:{id:"默认隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认隔离级别"}},[t._v("#")]),t._v(" 默认隔离级别")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("MySQL 5.0 到 8.0")]),t._v("：对于 InnoDB 存储引擎，默认的事务隔离级别是 "),a("strong",[t._v("REPEATABLE READ")]),t._v("。这意味着在一个事务内，如果你对同一数据进行多次读取，你会得到相同的结果，即使其他事务在这期间对数据进行了修改并提交。")])]),t._v(" "),a("h4",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),a("ul",[a("li",[t._v("如果你使用的是较新的 MySQL 版本（例如 8.0），并且希望改变默认的事务隔离级别，可以在 MySQL 配置文件 ("),a("code",[t._v("my.cnf")]),t._v(" 或 "),a("code",[t._v("my.ini")]),t._v(") 中设置 "),a("code",[t._v("innodb_default_row_lock")]),t._v(" 和 "),a("code",[t._v("transaction-isolation")]),t._v(" 参数，或者在运行时通过 SQL 语句临时改变当前会话或全局的事务隔离级别。")])]),t._v(" "),a("p",[t._v("例如，要将当前会话的事务隔离级别设置为 "),a("code",[t._v("READ COMMITTED")]),t._v("，你可以执行如下命令：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMITTED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("要永久改变默认的事务隔离级别，你需要编辑 MySQL 配置文件，并添加或修改如下行：")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("mysqld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("transaction-isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("READ-COMMITTED")]),t._v("\n")])])]),a("p",[t._v("然后重启 MySQL 服务以使更改生效。")])])}),[],!1,null,null,null);s.default=_.exports}}]);